<?xml version="1.0"?>
<!-- DesktopQuad Platform model -->
<robot name="platform" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="P" value="${load_yaml('$(find desktopquad)/params/platform.yaml')}"/>

  <xacro:macro name="origin_pose" params="pose">
    <!-- Expects that 'pose' is a YAML dict with (x, y, z, R, P, Y) -->
    <origin xyz="${pose['x']} ${pose['y']} ${pose['z']}" rpy="${pose['R']} ${pose['P']} ${pose['Y']}" />
  </xacro:macro>

  <!-- Physical properties of the base -->
  <xacro:property name="bM" value="${P['base']['mass']}" />    <!-- base mass -->
  <xacro:property name="bL" value="${P['base']['length']}" />  <!-- base length (x)-->
  <xacro:property name="bW" value="${P['base']['width']}" />   <!-- base width  (y) -->
  <xacro:property name="bH" value="${P['base']['height']}" />  <!-- base height (z) -->
  <xacro:property name="base_inertia">
    <inertia
        ixx="${bM / 12.0 * (bW*bW + bH*bH)}" ixy="0.0" ixz="0.0"
        iyy="${bM / 12.0 * (bH*bH + bL*bL)}" iyz="0.0"
        izz="${bM / 12.0 * (bW*bW + bL*bL)}"/>
  </xacro:property>


  <!-- Physical properties of the rods -->
  <xacro:property name="rM" value="${P['rods']['mass']}" />     <!-- rod mass -->
  <xacro:property name="rL" value="${P['rods']['length']}" />   <!-- rod length (z) -->
  <xacro:property name="rR" value="${P['rods']['radius']}" />   <!-- rod radius (xy) -->
  <xacro:property name="rod_inertia">
    <inertia
        ixx="${rM / 12.0 * (3*rR*rR + rL*rL)}" ixy="0.0" ixz="0.0"
        iyy="${rM / 12.0 * (3*rR*rR + rL*rL)}" iyz="0.0"
        izz="${rM * rR*rR / 12.0}"/>
  </xacro:property>


  <!-- Physical properties of the top -->
  <xacro:property name="tM" value="${P['top']['mass']}" />    <!-- top mass -->
  <xacro:property name="tL" value="${P['top']['length']}" />  <!-- top length (x)-->
  <xacro:property name="tW" value="${P['top']['width']}" />   <!-- top width  (y) -->
  <xacro:property name="tH" value="${P['top']['height']}" />  <!-- top height (z) -->
  <xacro:property name="top_inertia">
    <inertia
        ixx="${tM / 12.0 * (tW*tW + tH*tH)}" ixy="0.0" ixz="0.0"
        iyy="${tM / 12.0 * (tH*tH + tL*tL)}" iyz="0.0"
        izz="${tM / 12.0 * (tW*tW + tL*tL)}"/>
  </xacro:property>


  <!-- Physical properties of the ArUco map -->
  <xacro:property name="aL" value="${P['aruco']['length']}" />  <!-- map/paper length (x)-->
  <xacro:property name="aW" value="${P['aruco']['width']}" />   <!-- map/paper width  (y) -->
  <xacro:property name="aH" value="${P['aruco']['height']}" />  <!-- map/paper height (z) -->

  <!--*****************************-->
  <!-- Gazebo Materials and Colors -->
  <!--*****************************-->

  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="left_rod">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="right_rod">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="top_link">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="aruco_tags">
    <material>aruco_mip_36h12_markermap/Diffuse</material>
  </gazebo>


  <!--*****************************************-->
  <!--  Make Platform Steadfast and Immovable  -->
  <!--*****************************************-->

  <!-- Used for fixing robot to Gazebo 'base_link' -->
  <link name="world"/>

  <joint name="fixed" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
  </joint>


  <!--*****************************-->
  <!--  DesktopQuad Platform Desc  -->
  <!--*****************************-->

  <!-- Base Link -->
  <link name='base_link'>
    <inertial>
      <xacro:origin_pose pose="${P['base']['pose']}" />
      <mass value="${bM}" />
      <xacro:insert_block name="base_inertia" />
    </inertial>

    <visual>
      <xacro:origin_pose pose="${P['base']['pose']}" />
      <geometry>
        <box size="${bL} ${bW} ${bH}" />
      </geometry>
    </visual>
    
    <collision name='collision'>
      <xacro:origin_pose pose="${P['base']['pose']}" />
      <geometry>
        <box size="${bL} ${bW} ${bH}" />
      </geometry>
    </collision>
  </link>


  <!-- Left Rod -->
  <link name='left_rod'>
    <inertial>
      <xacro:origin_pose pose="${P['rods']['left_pose']}" />
      <mass value="${rM}" />
      <xacro:insert_block name="rod_inertia" />
    </inertial>

    <visual>
      <xacro:origin_pose pose="${P['rods']['left_pose']}" />
      <geometry>
        <cylinder length="${rL}" radius="${rR}"/>
      </geometry>
    </visual>

    <collision>
      <xacro:origin_pose pose="${P['rods']['left_pose']}" />
      <geometry>
        <cylinder length="${rL}" radius="${rR}"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_left_rod" type="fixed">
    <parent link="base_link"/>
    <child link="left_rod"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>


  <!-- Right Rod -->
  <link name='right_rod'>
    <inertial>
      <xacro:origin_pose pose="${P['rods']['right_pose']}" />
      <mass value="${rM}" />
      <xacro:insert_block name="rod_inertia" />
    </inertial>

    <visual>
      <xacro:origin_pose pose="${P['rods']['right_pose']}" />
      <geometry>
        <cylinder length="${rL}" radius="${rR}"/>
      </geometry>
    </visual>

    <collision>
      <xacro:origin_pose pose="${P['rods']['right_pose']}" />
      <geometry>
        <cylinder length="${rL}" radius="${rR}"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_right_rod" type="fixed">
    <parent link="base_link"/>
    <child link="right_rod"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>


  <!-- Top/Plexiglass -->
  <link name='top_link'>
    <inertial>
      <xacro:origin_pose pose="${P['top']['pose']}" />
      <mass value="${tM}" />
      <xacro:insert_block name="top_inertia" />
    </inertial>

    <visual>
      <xacro:origin_pose pose="${P['top']['pose']}" />
      <geometry>
        <box size="${tL} ${tW} ${tH}" />
      </geometry>
    </visual>

    <collision>
      <xacro:origin_pose pose="${P['top']['pose']}" />
      <geometry>
        <box size="${tL} ${tW} ${tH}" />
      </geometry>
    </collision>
  </link>

  <joint name="top_left_rod" type="fixed">
    <!-- Only need a fixed joint to connect to one rod -->
    <parent link="left_rod"/>
    <child link="top_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>


  <!-- ArUco Marker Map -->
  <link name='aruco_tags'>
    <!-- I compared the Gazebo model with a piece a paper, noted where the z-axis went through the middle -->
    <!-- marker, and then measured a printed version of the marker map and found the necessary (x,y) offsets -->
    <!-- that would put the center of the middle ArUco tag in the center of Gazebo -->
    <visual>
      <xacro:origin_pose pose="${P['aruco']['pose']}" />
      <geometry>
        <box size="${aL} ${aW} ${aH}" />
      </geometry>
    </visual>

    <collision>
      <xacro:origin_pose pose="${P['aruco']['pose']}" />
      <geometry>
        <box size="${aL} ${aW} ${aH}" />
      </geometry>
    </collision>
  </link>

  <joint name="top_aruco" type="fixed">
    <parent link="top_link"/>
    <child link="aruco_tags"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>


  <!-- ROS/Gazebo Platform Plugin -->
  <gazebo>
    <plugin name="platform" filename="libplatform_plugin.so">
      <baseLink>base_link</baseLink>
      <baseHeight>${P['base']['height']}</baseHeight>
      <platformHeight>${P['rods']['length']}</platformHeight>
    </plugin>
  </gazebo>

</robot>